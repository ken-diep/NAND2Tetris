// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in= true, sel= address, a= a, b= b, c= c, d= d, 
        e= e, f= f, g= g, h= h);

    And(a= a, b= load, out= loada);
    Register(in= in, load= loada, out= outa);

    And(a= b, b= load, out= loadb);
    Register(in= in, load= loadb, out= outb);

    And(a= c, b= load, out= loadc);
    Register(in= in, load= loadc, out= outc);

    And(a= d, b= load, out= loadd);
    Register(in= in, load= loadd, out= outd);

    And(a= e, b= load, out= loade);
    Register(in= in, load= loade, out= oute);

    And(a= f, b= load, out= loadf);
    Register(in= in, load= loadf, out= outf);

    And(a= g, b= load, out= loadg);
    Register(in= in, load= loadg, out= outg);

    And(a= h, b= load, out= loadh);
    Register(in= in, load= loadh, out= outh);

    Mux8Way16(a= outa, b= outb, c= outc, d= outd, 
        e= oute, f= outf, g= outg, h= outh, sel= address, out= out);

    CLOCKED in, load;
}