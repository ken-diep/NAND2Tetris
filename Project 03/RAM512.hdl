// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    Not(in= address[8], out= na8);
    Not(in= address[7], out= na7);
    Not(in= address[6], out= na6);

    And(a= na8, b= na7, out= na8na7);
    And(a= na8na7, b= na6, out= or0); //First eighth of table 000
    And(a= load, b= or0, out= load0);
    RAM64(in= in, load= load0, address= address[0..5], out= out0);

    And(a= na8na7, b= address[6], out= or1); //Second eighth of table 001
    And(a= load, b= or1, out= load1);
    RAM64(in= in, load= load1, address= address[0..5], out= out1);

    And(a= na8, b= address[7], out= na8a7);
    And(a= na8a7, b= na6, out= or2); //Third eighth of table 010
    And(a= load, b= or2, out= load2);
    RAM64(in= in, load= load2, address= address[0..5], out= out2);
	
    And(a= na8a7, b= address[6], out= or3); //Fourth eighth of table 011
    And(a= load, b= or3, out= load3);
    RAM64(in= in, load= load3, address= address[0..5], out= out3);
	
	And(a= address[8], b= na7, out= a8na7);
	And(a= a8na7, b= na6, out= or4); //Fifth eighth of table 100
    And(a= load, b= or4, out= load4);
    RAM64(in= in, load= load4, address= address[0..5], out= out4);
	
	And(a= a8na7, b= address[6], out= or5); //Sixth eighth of table 101
    And(a= load, b= or5, out= load5);
    RAM64(in= in, load= load5, address= address[0..5], out= out5);
	
	And(a= address[8], b= address[7], out= a8a7);
	And(a= a8a7, b= na6, out= or6); //Seventh eighth of table 110
    And(a= load, b= or6, out= load6);
    RAM64(in= in, load= load6, address= address[0..5], out= out6);
	
	And(a= a8a7, b= address[6], out= or7); //Eightth eighth of table 111
    And(a= load, b= or7, out= load7);
    RAM64(in= in, load= load7, address= address[0..5], out= out7);

    Mux8Way16(a= out0, b= out1, c= out2, d= out3, 
        e= out4, f= out5, g= out6, h= out7, sel= address[6..8], out= out);
    
    CLOCKED in, load;
}